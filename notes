<--
 vim:ft=markdown
-->
How can you copy an array and push elements to its end?
Array.concat()

Remember: do **not** mutate state outside of this.setState

Given a `product` object with a number property `votes`, how would you increment the value of `votes` without mutating `product`?
Cleary, we must create a copy.
```javascript
Object.assign({}, product, {
  votes: product.votes + 1,
});
```
This will create a new Object, copy the properties of `product`, and then overwrite the `votes` property on the new object.

How would you define the initial state for a component with the property intializer syntax?
```javascript
class ProductList extends React.Component {
  state = {
    products: [].
  };
}
```
note that you don't have to use `this`

What is the major advantage of using arrow function definitions?
`this` is bound to the class automatically
