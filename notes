<--
 vim:ft=markdown
-->
How can you copy an array and push elements to its end?
Array.concat()

Remember: do **not** mutate state outside of this.setState

Given a `product` object with a number property `votes`, how would you increment the value of `votes` without mutating `product`?
Cleary, we must create a copy.
```javascript
Object.assign({}, product, {
  votes: product.votes + 1,
});
```
This will create a new Object, copy the properties of `product`, and then overwrite the `votes` property on the new object.

How would you define the initial state for a component with the property intializer syntax?
```javascript
class ProductList extends React.Component {
  state = {
    products: [].
  };
}
```
note that you don't have to use `this`

What is the major advantage of using arrow function definitions?
`this` is bound to the class automatically

When you visit a website, assets are the files that your browser downloads and uses to display the page.

The books suggested steps for building a react app from scratch?
1. Break the app into components
2. Build a static version of the app
3. Determine what should be stateful
4. Determine in which component each piece of state should live
5. Hard-code initial states
6. Add inverse data flow
7. Add server communication

The bottom level components in a component hierarchy are often known as leaf components
